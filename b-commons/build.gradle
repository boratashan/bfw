/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.4.1/userguide/java_library_plugin.html
 */

// Apply the java-library plugin to add support for Java Library
apply plugin: 'java-library'
apply plugin: 'maven-publish'


// In this section you declare where to find the dependencies of your project

def vertxversion = '3.6.2'
sourceCompatibility = '1.8'


dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    //api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
   // implementation 'com.google.guava:guava:23.0'



    api "io.vertx:vertx-core:$vertxversion"
    api "io.vertx:vertx-web:$vertxversion"
    api "io.vertx:vertx-auth-oauth2:$vertxversion"
    api "io.vertx:vertx-service-discovery:$vertxversion"
    api "io.vertx:vertx-auth-oauth2:$vertxversion"
    api "io.vertx:vertx-auth-common:$vertxversion"
// https://mvnrepository.com/artifact/io.vertx/vertx-auth-jwt
    api group: 'io.vertx', name: 'vertx-auth-jwt', version: '3.6.3'
    api 'io.vertx:vertx-mongo-client:3.8.2'

    // https://mvnrepository.com/artifact/io.vertx/vertx-codegen
    api group: 'io.vertx', name: 'vertx-codegen', version: '3.7.0'
    api 'io.vertx:vertx-service-proxy:3.7.0'

    api 'io.vertx:vertx-config:3.7.0'
    api 'io.vertx:vertx-circuit-breaker:3.7.0'
    api 'io.vertx:vertx-infinispan:3.8.0'

    compile group: 'io.vertx', name: 'vertx-zookeeper', version: '3.8.1'

// https://mvnrepository.com/artifact/org.infinispan/infinispan-client-hotrod
    api group: 'org.infinispan', name: 'infinispan-client-hotrod', version: '9.4.16.Final'

    // https://mvnrepository.com/artifact/org.jsoup/jsoup
    api group: 'org.jsoup', name: 'jsoup', version: '1.7.2'
    // https://mvnrepository.com/artifact/joda-time/joda-time
    api group: 'joda-time', name: 'joda-time', version: '2.3'
// https://mvnrepository.com/artifact/org.joda/joda-money
    api group: 'org.joda', name: 'joda-money', version: '0.6'

    implementation group: 'commons-cli', name: 'commons-cli', version: '1.4'

    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    api group: 'org.apache.commons', name: 'commons-lang3', version: '3.0'


    api group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.12.1'
    api group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.12.1'

    compile "io.vertx:vertx-codegen:3.8.1:processor"
    compile "io.vertx:vertx-service-proxy:3.8.1"


    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
}






version = '0.1.1'

jar {
    manifest {
        attributes('Implementation-Title': project.name,
                'Implementation-Version': project.version)
    }
}

task annotationProcessing(type: JavaCompile, group: 'build') { // codegen
    source = sourceSets.main.java
    classpath = configurations.compile + configurations.compileOnly
    destinationDir = project.file('src/main/generated')
    options.compilerArgs = [
            "-proc:only",
            "-processor", "io.vertx.codegen.CodeGenProcessor",
            "-Acodegen.output=${project.projectDir}/src/main"
    ]
}


sourceSets {
    main {
        java {
            srcDirs += 'src/main/generated'
        }
        resources {
            srcDirs += 'src/main/resources'
        }
    }

}